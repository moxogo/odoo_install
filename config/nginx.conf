upstream odoo {
    server odoo:8069;
}

upstream odoochat {
    server odoo:8072;
}

# Basic HTTP server for initial setup
server {
    listen 80;
    server_name hub.mxgsoft.com moxogo.com;

    # Certbot challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS Server for first domain
server {
    listen 443 ssl;
    http2 on;
    server_name hub.mxgsoft.com;

    ssl_certificate /etc/letsencrypt/live/hub.mxgsoft.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hub.mxgsoft.com/privkey.pem;

    # SSL settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # Locations
    location / {
        proxy_pass http://odoo;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /websocket {
        proxy_pass http://odoochat;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /longpolling {
        proxy_pass http://odoochat;
    }

    location ~* /web/static/ {
        proxy_pass http://odoo;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_valid 200 60m;
        expires 864000;
    }

    # Compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript;
}

# HTTPS Server for second domain
server {
    listen 443 ssl;
    http2 on;
    server_name moxogo.com;

    ssl_certificate /etc/letsencrypt/live/moxogo.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/moxogo.com/privkey.pem;

    # Include same SSL and security settings as above
    include /etc/nginx/conf.d/ssl_settings.inc;
    
    # Include same locations as above
    include /etc/nginx/conf.d/locations.inc;
}